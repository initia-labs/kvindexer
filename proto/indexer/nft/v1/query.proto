syntax = "proto3";

package indexer.nft.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";
import "indexer/nft/v1/types.proto";

option go_package = "github.com/initia-labs/indexer/v2/submodule/nft/types";

// Query provides the service definition for the Collections and NFTs
service Query {

	// Collection queries a collection by its address
	rpc Collection(QueryCollectionRequest) returns (QueryCollectionResponse) {
		option (google.api.http) = {
			get : "/indexer/nft/v1/collections/{collection_addr}"
		};
	}

	// Collections queries all the collections of an account
	rpc Collections(QueryCollectionsRequest) returns (QueryCollectionsResponse) {
		option (google.api.http) = {
			get : "/indexer/nft/v1/collections"
		};
	}

	// Tokens queries all the NFTs of an account
	rpc Tokens(QueryTokensRequest) returns (QueryTokensResponse) {
		option (google.api.http) = {
			get : "/indexer/nft/v1/tokens/{collection_addr}/{token_id}"
		};
	}
}

// QueryCollectionsRequest is the request type for the Query/Collections RPC method
message QueryCollectionsRequest {
	string account = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryCollectionsResponse is the response type for the Query/Collections RPC method
message QueryCollectionsResponse {
	repeated IndexedCollection collections = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryCollectionRequest is the request type for the Query/Collection RPC method
message QueryCollectionRequest {
	string collection_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryCollectionResponse is the response type for the Query/Collection RPC method
message QueryCollectionResponse {
	IndexedCollection collection = 1;
}

// QueryTokensRequest is the request type for the Query/Tokens RPC method
message QueryTokensRequest {
	string collection_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
	string token_id = 2;
	string owner = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
	cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryTokensResponse is the response type for the Query/Tokens RPC method
message QueryTokensResponse {
	repeated IndexedToken tokens = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
