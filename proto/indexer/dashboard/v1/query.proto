syntax = "proto3";

package indexer.dashboard.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "indexer/dashboard/v1/types.proto";

option go_package = "github.com/initia-labs/kvindexer/submodule/dashboard/types";

// Query provides defines the gRPC querier service.
service Query {
  // NewAccounts returns the new accounts in range [from, to].
  rpc NewAccounts(NewAccountsRequest)
	  returns (NewAccountsResponse) {
	option (google.api.http) = {
	  get : "/indexer/dashboard/v1/new_accounts"
	};
  }

  // ChartData returns the chart data in daily basis.
  rpc ChartData(ChartDataRequest)
	returns (ChartDataResponse) {
		option (google.api.http) = {
		get : "/indexer/dashboard/v1/chart_data"
	};
  }
}

// NewAccountsRequest is the request type for the Query/NewAccounts
// RPC method.
message NewAccountsRequest {
	// pagination defines an optional pagination for the request.
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// NewAccountsResponse is the response type for the Query/NewAccounts
// RPC method.
message NewAccountsResponse {
	repeated AccountsPerHeight addresses = 1;

	// pagination defines the pagination in the response.
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ChartData is the request type for the Query/ChartData
// RPC method.
message ChartDataRequest {
	int64 limit = 1;
}

// ChartDataResponse is the response type for the Query/ChartData
// RPC method.
message ChartDataResponse {
	repeated ChartData data = 1;
}

