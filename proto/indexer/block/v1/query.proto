syntax = "proto3";

package indexer.block.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "indexer/block/v1/types.proto";

option go_package = "github.com/initia-labs/kvindexer/submodules/block/types";

// Query provides defines the gRPC querier service.
service Query {

  // Block returns a block by its height.
  rpc Block(BlockRequest) returns (BlockResponse) {
    option (google.api.http) = {
      get : "/indexer/block/v1/blocks/{height}"
    };
  }

  // Blocks returns a list of blocks.
  rpc Blocks(BlocksRequest) returns (BlocksResponse) {
    option (google.api.http) = {
      get : "/indexer/block/v1/blocks"
    };
  }

  // AvgBlockTime returns the average block time.
  rpc AvgBlockTime(AvgBlockTimeRequest) returns (AvgBlockTimeResponse) {
    option (google.api.http) = {
      get : "/indexer/block/v1/avg_blocktime"
    };
  }
}

// BlockRequest defines the request for the Block RPC.
message BlockRequest { int64 height = 1; }

// BlockResponse defines the response for the Block RPC.
message BlockResponse { Block block = 1; }

// BlocksRequest defines the request for the Blocks RPC.
message BlocksRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// BlocksResponse defines the response for the Blocks RPC.
message BlocksResponse {
  repeated Block blocks = 1;
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// AvgBlockTimeRequest defines the request for the AvgBlockTime RPC.
message AvgBlockTimeRequest {}

// AvgBlockTimeResponse defines the response for the AvgBlockTime RPC.
message AvgBlockTimeResponse { double avg_block_time = 1; }
