syntax = "proto3";

package indexer.tx.v1;

import "cosmos/base/abci/v1beta1/abci.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/initia-labs/kvindexer/submodule/tx/types";

// Query provides the service definition for the Txs 
service Query {
	// Tx queries a transaction by hash
	rpc Tx(QueryTxRequest) returns (QueryTxResponse) {
		option (google.api.http) = {
			get : "/indexer/whatever/v1/tx/{tx_hash}"
		};
	}

	// Txs queries all transactions with pagination
	rpc Txs(QueryTxsRequest) returns (QueryTxsResponse) {
		option (google.api.http) = {
			get : "/indexer/tx/v1/txs"
		};
	}

	// TxsByAccount queries all the collections of given account
	rpc TxsByAccount(QueryTxsByAccountRequest) returns (QueryTxsResponse) {
		option (google.api.http) = {
			get : "/indexer/tx/v1/txs/by_account/{address}"
		};
	}

	// TxsByHeight queries all the collections of given height
	rpc TxsByHeight(QueryTxsByHeightRequest) returns (QueryTxsResponse) {
		option (google.api.http) = {
			get : "/indexer/tx/v1/txs/by_height/{height}"
		};
	}
}


// QueryTxRequest is the request type for the Query/Txs RPC method
message QueryTxRequest {
	// address is the address to query txs for.
	string tx_hash = 1 ;
}

// QueryTxResponse is the response type for the Query/Txs RPC method
message QueryTxResponse {
	// txs is the list of queried transactions.
	cosmos.base.abci.v1beta1.TxResponse tx = 1;
}

// QueryTxsequest is the request type for the Query/Txs RPC method
message QueryTxsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}


// QueryTxsByAccountRequest is the request type for the Query/Txs RPC method
message QueryTxsByAccountRequest {
	// address is the address to query txs for.
	string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryTxsByHeightRequest is the request type for the Query/Txs RPC method
message QueryTxsByHeightRequest {
	// height is the height to query txs for.
	int64 height = 1;

	cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryTxsResponse is the response type for the Query/Txs RPC method
message QueryTxsResponse {
	// txs is the list of queried transactions.
	repeated cosmos.base.abci.v1beta1.TxResponse txs = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}